//  defines how your data is structured in the database
// typegraphql generates the types for using typescript to create our graphql APIs
// you can create an enum Role (USER/ADMIN)
// create relations by linking models

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URI")
}

generator client {
  provider      = "prisma-client-js"
  output        = "./client"
  engineType    = "binary"
  binaryTargets = ["native", "windows"]
}

generator typegraphql {
  provider        = "typegraphql-prisma"
  output          = "../common/graphql/types"
  emitOnly        = ["models", "inputs"]
  useSimpleInputs = true
}

model Sample {
  id   String @id @default(uuid())
  name String
}

enum TYPE {
  SECONDS
  DAILY
  MONTHLY
}

model Allocation {
  id        String @id @default(uuid())
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  vestingPeriod TYPE
  vestingStart DateTime
  vestingEnd DateTime
}